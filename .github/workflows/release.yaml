name: release

on:
  push:
    branches:
      - main

jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: determine_version
        id: determine_version
        uses: paulhatch/semantic-version@27c567670024e888aae67b95412884e74988827b
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "💥"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "/[🐛🚜🚀][^✏️🧪🧹]/"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}"
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: false
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          branch: "main"
      - name: get_previous_tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@8a0e045f02c0a3a04e1452df58b90fc7e555e950
      - name: changelog
        id: changelog
        uses: metcalfc/changelog-generator@e5306b306fa2e34f05258789e0e5c526c1bd4352
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          base-ref: ${{ steps.previoustag.outputs.tag }}
      - name: update_app_version
        run: sed -i 's/version = .*/version = ${{ steps.determine_version.outputs.version }}/g' apps/Splunk_App_for_Corda/default/app.conf
      - name: copy readme
        run: cp README.md apps/Splunk_App_for_Corda/README.md
      - name: package
        run: cd apps && tar -cvzf splunk_app_for_corda.tgz Splunk_App_for_Corda
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Splunk App for Corda ${{ steps.determine_version.outputs.version_tag }}
          tag_name: ${{ steps.determine_version.outputs.version_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apps/splunk_app_for_corda.tgz
          asset_name: splunk_app_for_corda-${{ steps.determine_version.outputs.version_tag }}.tgz
          asset_content_type: application/gzip
